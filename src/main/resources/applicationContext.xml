<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop.xsd
	       http://www.springframework.org/schema/tx
	       http://www.springframework.org/schema/tx/spring-tx.xsd
	       http://www.springframework.org/schema/task
           http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- <context:annotation-config /> -->
	<!-- 使用 annotation 自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 -->
	<context:component-scan
		base-package="com.sk.jsp.service,com.smart.sso.client.service,com.sk.jsp.springjobs" />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="fileEncoding" value="UTF-8" />
		<property name="locations">
			<list>
				<!--数据库参数配置 -->
				<value>classpath:jdbc.properties</value>
				<!--当前应用参数配置 -->
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<bean id="smartFilter" class="com.smart.sso.client.SmartContainer">
		<property name="ssoServerUrl" value="${sso.server.url}" />
		<!-- Dubbo服务开启时，打开注释 <property name="authenticationRpcService" ref="authenticationRpcService" 
			/> -->
		<property name="filters">
			<list>
				<!-- 单点登录 -->
				<bean class="com.smart.sso.client.SsoFilter">
					<property name="ssoAppCode" value="${sso.app.code}" />
				</bean>
				<!-- 单点退出(选配) -->
				<bean class="com.smart.sso.client.LogoutFilter">
					<property name="pattern" value="/admin/logout" />
					<property name="ssoBackUrl" value="/index" />
				</bean>
				<!-- 权限控制 -->
				<bean class="com.smart.sso.client.filter.PermissionFilter" />
			</list>
		</property>
	</bean>

	<task:annotation-driven scheduler="qbScheduler"
		mode="proxy" />
	<task:scheduler id="qbScheduler" pool-size="10" />

	<!-- 引入Mybatis及数据库相关 -->
	<import resource="applicationContext-mybatis.xml" />

	<!-- 引入服务相关 -->
	<!-- <import resource="applicationContext-service.xml" /> -->

	<!-- Dubbo : 为Token验证和授权提供RPC服务，不开启默认Hessian <import resource="dubbo-consumer.xml" 
		/> -->

	<!-- redis : 用于部署多JVM实例时，RedisSession覆盖HttpSession实现Session共享 <import resource="classpath:spring-redis-sso.xml" 
		/> -->

	<!-- activeMQ : 用于权限有修改时，异步通知应用更新权限 <import resource="classpath:spring-mq-sso.xml" 
		/> -->
</beans>
